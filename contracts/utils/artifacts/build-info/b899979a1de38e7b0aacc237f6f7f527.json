{
	"id": "b899979a1de38e7b0aacc237f6f7f527",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/utils/Authenticator.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"../interface/IAuthenticator.sol\";\n\ncontract Authenticator is IAuthenticator {\n    // mapping(address => bool) private _subject;\n    // mapping(address => bool) private _administrator;\n    // mapping(address => bool) private _actor;\n    mapping(address => bool) private _healthRecord;\n\n    constructor() {\n        // _administrator[msg.sender] = true;\n        _healthRecord[msg.sender] = true;\n    }\n\n    // function createDID(address _address, AuthType authType) external {\n    //     require(_address != address(0), \"Address zero is not allowed\");\n    //     require(\n    //         _administrator[msg.sender] == true,\n    //         \"Address is not administrator\"\n    //     );\n    //     if (_subject[_address] && authType != AuthType.SB)\n    //         _subject[_address] = false;\n    //     if (_administrator[_address] && authType != AuthType.AD)\n    //         _administrator[_address] = false;\n    //     if (_actor[_address] && authType != AuthType.IV)\n    //         _actor[_address] = false;\n\n    //     if (authType == AuthType.SB) _subject[_address] = true;\n    //     else if (authType == AuthType.AD) _administrator[_address] = true;\n    //     else if (authType == AuthType.IV) _actor[_address] = true;\n    // }\n\n    function checkAuth(address _address)\n        external\n        view\n        override\n        returns (AuthType)\n    {\n        // require(_address != address(0), \"Address zero is not allowed\");\n        // if(_healthRecord[_address]) return AuthType.HR;\n        // if (_subject[_address]) return AuthType.SB;\n        // else if (_administrator[_address]) return AuthType.AD;\n        // else if (_actor[_address]) return AuthType.IV;\n        // else return AuthType.NONE;\n    }\n\n}\n\ncontract AuthenticatorHelper {\n    IAuthenticator private _IAuth;\n\n    constructor(address _authenticator) {\n        require(_authenticator != address(0), \"Address zero is not allowed\");\n        _IAuth = IAuthenticator(_authenticator);\n    }\n\n    modifier onlyClinic() {\n        require(\n            _IAuth.checkAuth(msg.sender) == AuthType.CL,\n            \"Only actor_clinic can call this function\"\n        );\n        _;\n    }\n\n}\n"
			},
			"contracts/interface/IAuthenticator.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"../enum/AuthType.sol\";\n\ninterface IAuthenticator {\n    function checkAuth(address _address) external view returns (AuthType);\n}\n"
			},
			"contracts/enum/AuthType.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nenum AuthType {\r\n    NONE,\r\n    CL,\r\n    HR\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/interface/IAuthenticator.sol": {
				"IAuthenticator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "checkAuth",
							"outputs": [
								{
									"internalType": "enum AuthType",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkAuth(address)": "4b165090"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"checkAuth\",\"outputs\":[{\"internalType\":\"enum AuthType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IAuthenticator.sol\":\"IAuthenticator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/enum/AuthType.sol\":{\"keccak256\":\"0x1d306485d04b46f6211ff1ae31c74288dac1575221fb826d423da7832617ac1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cf0839f69f3d716a841f1a9c0b3f3813b407e865bb712b881e1e1859809c214\",\"dweb:/ipfs/QmZxWZgrczu3ukQdcLyfiWUTVpD5oAZDJfPYi2a2Xz7yff\"]},\"contracts/interface/IAuthenticator.sol\":{\"keccak256\":\"0x093fc2acf8a48c553caac683bce0ed5ac7b82998a52311187fdef00d49add4b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542f1b1b4894bb4e021e526174c493f6ed4c15e4d3e99a5a4b104ddf5a5fb455\",\"dweb:/ipfs/QmVrA6Jhd7JqcPkv44jaGFnv9PpLBJoWceBezR8guZuxMv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Authenticator.sol": {
				"Authenticator": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "checkAuth",
							"outputs": [
								{
									"internalType": "enum AuthType",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/Authenticator.sol\":99:1773  contract Authenticator is IAuthenticator {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/utils/Authenticator.sol\":353:462  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/utils/Authenticator.sol\":451:455  true */\n  0x01\n    /* \"contracts/utils/Authenticator.sol\":423:436  _healthRecord */\n  0x00\n    /* \"contracts/utils/Authenticator.sol\":423:448  _healthRecord[msg.sender] */\n  dup1\n    /* \"contracts/utils/Authenticator.sol\":437:447  msg.sender */\n  caller\n    /* \"contracts/utils/Authenticator.sol\":423:448  _healthRecord[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/utils/Authenticator.sol\":423:455  _healthRecord[msg.sender] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/utils/Authenticator.sol\":99:1773  contract Authenticator is IAuthenticator {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/Authenticator.sol\":99:1773  contract Authenticator is IAuthenticator {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4b165090\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/utils/Authenticator.sol\":1297:1770  function checkAuth(address _address)... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/utils/Authenticator.sol\":1398:1406  AuthType */\n      0x00\n        /* \"contracts/utils/Authenticator.sol\":1297:1770  function checkAuth(address _address)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_12:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_14\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_6:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_17\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":228:347   */\n    tag_17:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_20\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_12\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:634   */\n    tag_21:\n        /* \"#utility.yul\":582:627   */\n      tag_23\n        /* \"#utility.yul\":621:626   */\n      dup2\n        /* \"#utility.yul\":582:627   */\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":577:580   */\n      dup3\n        /* \"#utility.yul\":570:628   */\n      mstore\n        /* \"#utility.yul\":487:634   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":640:878   */\n    tag_9:\n        /* \"#utility.yul\":741:745   */\n      0x00\n        /* \"#utility.yul\":779:781   */\n      0x20\n        /* \"#utility.yul\":768:777   */\n      dup3\n        /* \"#utility.yul\":764:782   */\n      add\n        /* \"#utility.yul\":756:782   */\n      swap1\n      pop\n        /* \"#utility.yul\":792:871   */\n      tag_26\n        /* \"#utility.yul\":868:869   */\n      0x00\n        /* \"#utility.yul\":857:866   */\n      dup4\n        /* \"#utility.yul\":853:870   */\n      add\n        /* \"#utility.yul\":844:850   */\n      dup5\n        /* \"#utility.yul\":792:871   */\n      tag_21\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":640:878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":965:1061   */\n    tag_29:\n        /* \"#utility.yul\":1002:1009   */\n      0x00\n        /* \"#utility.yul\":1031:1055   */\n      tag_31\n        /* \"#utility.yul\":1049:1054   */\n      dup3\n        /* \"#utility.yul\":1031:1055   */\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":1020:1055   */\n      swap1\n      pop\n        /* \"#utility.yul\":965:1061   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1067:1198   */\n    tag_33:\n        /* \"#utility.yul\":1114:1121   */\n      0x00\n        /* \"#utility.yul\":1143:1148   */\n      dup2\n        /* \"#utility.yul\":1132:1148   */\n      swap1\n      pop\n        /* \"#utility.yul\":1149:1192   */\n      tag_35\n        /* \"#utility.yul\":1186:1191   */\n      dup3\n        /* \"#utility.yul\":1149:1192   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":1067:1198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1204:1330   */\n    tag_32:\n        /* \"#utility.yul\":1241:1248   */\n      0x00\n        /* \"#utility.yul\":1281:1323   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1274:1279   */\n      dup3\n        /* \"#utility.yul\":1270:1324   */\n      and\n        /* \"#utility.yul\":1259:1324   */\n      swap1\n      pop\n        /* \"#utility.yul\":1204:1330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1336:1467   */\n    tag_24:\n        /* \"#utility.yul\":1394:1403   */\n      0x00\n        /* \"#utility.yul\":1427:1461   */\n      tag_39\n        /* \"#utility.yul\":1455:1460   */\n      dup3\n        /* \"#utility.yul\":1427:1461   */\n      tag_33\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1414:1461   */\n      swap1\n      pop\n        /* \"#utility.yul\":1336:1467   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1473:1653   */\n    tag_40:\n        /* \"#utility.yul\":1521:1598   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1518:1519   */\n      0x00\n        /* \"#utility.yul\":1511:1599   */\n      mstore\n        /* \"#utility.yul\":1618:1622   */\n      0x21\n        /* \"#utility.yul\":1615:1616   */\n      0x04\n        /* \"#utility.yul\":1608:1623   */\n      mstore\n        /* \"#utility.yul\":1642:1646   */\n      0x24\n        /* \"#utility.yul\":1639:1640   */\n      0x00\n        /* \"#utility.yul\":1632:1647   */\n      revert\n        /* \"#utility.yul\":1782:1899   */\n    tag_19:\n        /* \"#utility.yul\":1891:1892   */\n      0x00\n        /* \"#utility.yul\":1888:1889   */\n      dup1\n        /* \"#utility.yul\":1881:1893   */\n      revert\n        /* \"#utility.yul\":1905:2020   */\n    tag_36:\n        /* \"#utility.yul\":1988:1989   */\n      0x03\n        /* \"#utility.yul\":1981:1986   */\n      dup2\n        /* \"#utility.yul\":1978:1990   */\n      lt\n        /* \"#utility.yul\":1968:2014   */\n      tag_46\n      jumpi\n        /* \"#utility.yul\":1994:2012   */\n      tag_47\n      tag_40\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1968:2014   */\n    tag_46:\n        /* \"#utility.yul\":1905:2020   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2026:2148   */\n    tag_15:\n        /* \"#utility.yul\":2099:2123   */\n      tag_49\n        /* \"#utility.yul\":2117:2122   */\n      dup2\n        /* \"#utility.yul\":2099:2123   */\n      tag_29\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":2092:2097   */\n      dup2\n        /* \"#utility.yul\":2089:2124   */\n      eq\n        /* \"#utility.yul\":2079:2142   */\n      tag_50\n      jumpi\n        /* \"#utility.yul\":2138:2139   */\n      0x00\n        /* \"#utility.yul\":2135:2136   */\n      dup1\n        /* \"#utility.yul\":2128:2140   */\n      revert\n        /* \"#utility.yul\":2079:2142   */\n    tag_50:\n        /* \"#utility.yul\":2026:2148   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122012f65defa63376f8210b524ed46af0edb8efa657b7c5cc11ccae439e41d2f96764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_37": {
									"entryPoint": null,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506101bf806100776000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634b16509014610030575b600080fd5b61004a6004803603810190610045919061007c565b610060565b60405161005791906100b8565b60405180910390f35b6000919050565b60008135905061007681610172565b92915050565b60006020828403121561009257610091610159565b5b60006100a084828501610067565b91505092915050565b6100b281610118565b82525050565b60006020820190506100cd60008301846100a9565b92915050565b60006100de826100f8565b9050919050565b60008190506100f38261015e565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610123826100e5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b6003811061016f5761016e61012a565b5b50565b61017b816100d3565b811461018657600080fd5b5056fea264697066735822122012f65defa63376f8210b524ed46af0edb8efa657b7c5cc11ccae439e41d2f96764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1BF DUP1 PUSH2 0x77 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4B165090 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x7C JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x76 DUP2 PUSH2 0x172 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x92 JUMPI PUSH2 0x91 PUSH2 0x159 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA0 DUP5 DUP3 DUP6 ADD PUSH2 0x67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB2 DUP2 PUSH2 0x118 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE DUP3 PUSH2 0xF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0xF3 DUP3 PUSH2 0x15E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123 DUP3 PUSH2 0xE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x16F JUMPI PUSH2 0x16E PUSH2 0x12A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x17B DUP2 PUSH2 0xD3 JUMP JUMPDEST DUP2 EQ PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xF6 0x5D 0xEF 0xA6 CALLER PUSH23 0xF8210B524ED46AF0EDB8EFA657B7C5CC11CCAE439E41D2 0xF9 PUSH8 0x64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "99:1674:2:-:0;;;353:109;;;;;;;;;;451:4;423:13;:25;437:10;423:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;99:1674;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@checkAuth_47": {
									"entryPoint": 96,
									"id": 47,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_enum$_AuthType_$5_to_t_uint8_fromStack": {
									"entryPoint": 169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_enum$_AuthType_$5__to_t_uint8__fromStack_reversed": {
									"entryPoint": 184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_AuthType_$5": {
									"entryPoint": 229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_AuthType_$5_to_t_uint8": {
									"entryPoint": 280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 345,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_AuthType_$5": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2151:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:3"
															},
															"nodeType": "YulIf",
															"src": "228:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:3",
														"type": ""
													}
												],
												"src": "152:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "560:74:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "577:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "621:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_AuthType_$5_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "582:38:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:45:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "570:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "570:58:3"
														}
													]
												},
												"name": "abi_encode_t_enum$_AuthType_$5_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "548:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "555:3:3",
														"type": ""
													}
												],
												"src": "487:147:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "746:132:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "756:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "768:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "779:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "764:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "764:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "756:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "844:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "857:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "868:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "853:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "853:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_AuthType_$5_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "792:51:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:79:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "792:79:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_AuthType_$5__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "718:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "730:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "741:4:3",
														"type": ""
													}
												],
												"src": "640:238:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "924:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "934:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "950:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "944:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "934:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "917:6:3",
														"type": ""
													}
												],
												"src": "884:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1010:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1020:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1049:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1031:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1031:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1020:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "992:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1002:7:3",
														"type": ""
													}
												],
												"src": "965:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1122:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1132:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1143:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1132:7:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1186:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_AuthType_$5",
																	"nodeType": "YulIdentifier",
																	"src": "1149:36:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:43:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1149:43:3"
														}
													]
												},
												"name": "cleanup_t_enum$_AuthType_$5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1104:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1114:7:3",
														"type": ""
													}
												],
												"src": "1067:131:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1249:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1259:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1274:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1281:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1270:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1270:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1259:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1231:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1241:7:3",
														"type": ""
													}
												],
												"src": "1204:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1404:63:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1414:47:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1455:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_AuthType_$5",
																	"nodeType": "YulIdentifier",
																	"src": "1427:27:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1427:34:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1414:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_AuthType_$5_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1384:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1394:9:3",
														"type": ""
													}
												],
												"src": "1336:131:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1501:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1518:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1521:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1511:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1511:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1511:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1615:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1618:4:3",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1608:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1608:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1608:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1639:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1642:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1632:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1632:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1632:15:3"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "1473:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1748:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1765:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1768:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1758:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1659:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1871:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1888:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1891:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1881:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1881:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1881:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1782:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1958:62:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1992:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "1994:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1994:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1994:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1981:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1988:1:3",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1978:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1978:12:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1971:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1971:20:3"
															},
															"nodeType": "YulIf",
															"src": "1968:46:3"
														}
													]
												},
												"name": "validator_assert_t_enum$_AuthType_$5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1951:5:3",
														"type": ""
													}
												],
												"src": "1905:115:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2069:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2126:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2135:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2138:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2128:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2128:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2128:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2092:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2117:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2099:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2099:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2089:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2089:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2082:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:43:3"
															},
															"nodeType": "YulIf",
															"src": "2079:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2062:5:3",
														"type": ""
													}
												],
												"src": "2026:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_enum$_AuthType_$5_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_AuthType_$5_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_AuthType_$5__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_AuthType_$5_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_enum$_AuthType_$5(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_AuthType_$5(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_enum$_AuthType_$5_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_AuthType_$5(value)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_assert_t_enum$_AuthType_$5(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80634b16509014610030575b600080fd5b61004a6004803603810190610045919061007c565b610060565b60405161005791906100b8565b60405180910390f35b6000919050565b60008135905061007681610172565b92915050565b60006020828403121561009257610091610159565b5b60006100a084828501610067565b91505092915050565b6100b281610118565b82525050565b60006020820190506100cd60008301846100a9565b92915050565b60006100de826100f8565b9050919050565b60008190506100f38261015e565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610123826100e5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b6003811061016f5761016e61012a565b5b50565b61017b816100d3565b811461018657600080fd5b5056fea264697066735822122012f65defa63376f8210b524ed46af0edb8efa657b7c5cc11ccae439e41d2f96764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4B165090 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x7C JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x76 DUP2 PUSH2 0x172 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x92 JUMPI PUSH2 0x91 PUSH2 0x159 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA0 DUP5 DUP3 DUP6 ADD PUSH2 0x67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB2 DUP2 PUSH2 0x118 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE DUP3 PUSH2 0xF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0xF3 DUP3 PUSH2 0x15E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123 DUP3 PUSH2 0xE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x16F JUMPI PUSH2 0x16E PUSH2 0x12A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x17B DUP2 PUSH2 0xD3 JUMP JUMPDEST DUP2 EQ PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xF6 0x5D 0xEF 0xA6 CALLER PUSH23 0xF8210B524ED46AF0EDB8EFA657B7C5CC11CCAE439E41D2 0xF9 PUSH8 0x64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "99:1674:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1297:473;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1398:8;1297:473;;;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:147::-;582:45;621:5;582:45;:::i;:::-;577:3;570:58;487:147;;:::o;640:238::-;741:4;779:2;768:9;764:18;756:26;;792:79;868:1;857:9;853:17;844:6;792:79;:::i;:::-;640:238;;;;:::o;965:96::-;1002:7;1031:24;1049:5;1031:24;:::i;:::-;1020:35;;965:96;;;:::o;1067:131::-;1114:7;1143:5;1132:16;;1149:43;1186:5;1149:43;:::i;:::-;1067:131;;;:::o;1204:126::-;1241:7;1281:42;1274:5;1270:54;1259:65;;1204:126;;;:::o;1336:131::-;1394:9;1427:34;1455:5;1427:34;:::i;:::-;1414:47;;1336:131;;;:::o;1473:180::-;1521:77;1518:1;1511:88;1618:4;1615:1;1608:15;1642:4;1639:1;1632:15;1782:117;1891:1;1888;1881:12;1905:115;1988:1;1981:5;1978:12;1968:46;;1994:18;;:::i;:::-;1968:46;1905:115;:::o;2026:122::-;2099:24;2117:5;2099:24;:::i;:::-;2092:5;2089:35;2079:63;;2138:1;2135;2128:12;2079:63;2026:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "89400",
								"executionCost": "24491",
								"totalCost": "113891"
							},
							"external": {
								"checkAuth(address)": "716"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 99,
									"end": 1773,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 99,
									"end": 1773,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 99,
									"end": 1773,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 353,
									"end": 462,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 353,
									"end": 462,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 353,
									"end": 462,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 353,
									"end": 462,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 353,
									"end": 462,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 353,
									"end": 462,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 353,
									"end": 462,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 353,
									"end": 462,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 353,
									"end": 462,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 353,
									"end": 462,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 353,
									"end": 462,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 451,
									"end": 455,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 423,
									"end": 436,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 448,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 437,
									"end": 447,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 423,
									"end": 448,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 423,
									"end": 448,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 423,
									"end": 448,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 423,
									"end": 448,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 423,
									"end": 448,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 423,
									"end": 448,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 423,
									"end": 448,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 423,
									"end": 448,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 423,
									"end": 448,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 423,
									"end": 448,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 423,
									"end": 448,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 423,
									"end": 448,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 423,
									"end": 448,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 423,
									"end": 448,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 448,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 423,
									"end": 448,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 455,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 423,
									"end": 455,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 423,
									"end": 455,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 423,
									"end": 455,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 423,
									"end": 455,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 423,
									"end": 455,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 423,
									"end": 455,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 423,
									"end": 455,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 423,
									"end": 455,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 423,
									"end": 455,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 423,
									"end": 455,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 423,
									"end": 455,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 423,
									"end": 455,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 423,
									"end": 455,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 423,
									"end": 455,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 423,
									"end": 455,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 423,
									"end": 455,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 423,
									"end": 455,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 99,
									"end": 1773,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 99,
									"end": 1773,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 99,
									"end": 1773,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 99,
									"end": 1773,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 99,
									"end": 1773,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 99,
									"end": 1773,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 99,
									"end": 1773,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122012f65defa63376f8210b524ed46af0edb8efa657b7c5cc11ccae439e41d2f96764736f6c63430008070033",
									".code": [
										{
											"begin": 99,
											"end": 1773,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "PUSH",
											"source": 2,
											"value": "4B165090"
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 99,
											"end": 1773,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1406,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1770,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 634,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 487,
											"end": 634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 582,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 621,
											"end": 626,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 582,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 582,
											"end": 627,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 582,
											"end": 627,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 582,
											"end": 627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 577,
											"end": 580,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 570,
											"end": 628,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 487,
											"end": 634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 487,
											"end": 634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 487,
											"end": 634,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 878,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 640,
											"end": 878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 741,
											"end": 745,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 781,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 768,
											"end": 777,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 764,
											"end": 782,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 756,
											"end": 782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 756,
											"end": 782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 792,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 868,
											"end": 869,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 866,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 853,
											"end": 870,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 844,
											"end": 850,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 792,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 792,
											"end": 871,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 871,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 792,
											"end": 871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 640,
											"end": 878,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 640,
											"end": 878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 640,
											"end": 878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 878,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 965,
											"end": 1061,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 965,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1009,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1049,
											"end": 1054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1031,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1031,
											"end": 1055,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1031,
											"end": 1055,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1031,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 965,
											"end": 1061,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 965,
											"end": 1061,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 965,
											"end": 1061,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 965,
											"end": 1061,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1067,
											"end": 1198,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1067,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1186,
											"end": 1191,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1149,
											"end": 1192,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1192,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1149,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1198,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1204,
											"end": 1330,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1204,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1274,
											"end": 1279,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 1324,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1324,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1204,
											"end": 1330,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1204,
											"end": 1330,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1204,
											"end": 1330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1204,
											"end": 1330,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1336,
											"end": 1467,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1336,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1394,
											"end": 1403,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1455,
											"end": 1460,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1427,
											"end": 1461,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1427,
											"end": 1461,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1427,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1461,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1461,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1336,
											"end": 1467,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1336,
											"end": 1467,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1336,
											"end": 1467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1336,
											"end": 1467,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1473,
											"end": 1653,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1473,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1521,
											"end": 1598,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1518,
											"end": 1519,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 1599,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1622,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1615,
											"end": 1616,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1646,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1639,
											"end": 1640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 1647,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1782,
											"end": 1899,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1782,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1892,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1893,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1905,
											"end": 2020,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1905,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1981,
											"end": 1986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 1990,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1968,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1968,
											"end": 2014,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1968,
											"end": 2014,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1968,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1905,
											"end": 2020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1905,
											"end": 2020,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2026,
											"end": 2148,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2026,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2117,
											"end": 2122,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2097,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2089,
											"end": 2124,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2079,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2079,
											"end": 2142,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2139,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2128,
											"end": 2140,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2079,
											"end": 2142,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2079,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2148,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"checkAuth(address)": "4b165090"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"checkAuth\",\"outputs\":[{\"internalType\":\"enum AuthType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Authenticator.sol\":\"Authenticator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/enum/AuthType.sol\":{\"keccak256\":\"0x1d306485d04b46f6211ff1ae31c74288dac1575221fb826d423da7832617ac1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cf0839f69f3d716a841f1a9c0b3f3813b407e865bb712b881e1e1859809c214\",\"dweb:/ipfs/QmZxWZgrczu3ukQdcLyfiWUTVpD5oAZDJfPYi2a2Xz7yff\"]},\"contracts/interface/IAuthenticator.sol\":{\"keccak256\":\"0x093fc2acf8a48c553caac683bce0ed5ac7b82998a52311187fdef00d49add4b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542f1b1b4894bb4e021e526174c493f6ed4c15e4d3e99a5a4b104ddf5a5fb455\",\"dweb:/ipfs/QmVrA6Jhd7JqcPkv44jaGFnv9PpLBJoWceBezR8guZuxMv\"]},\"contracts/utils/Authenticator.sol\":{\"keccak256\":\"0xcd5cd801b5642d949547603894f69dec80d22ccd0949e0658c67d3f483cd6799\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://093ebdd548b146f526133a02c2fddc8b23e3e856fbde628dd8ee844131cf2187\",\"dweb:/ipfs/QmX5YSibtwqsh63Ey6YHue3TYZyKqgQ9382MHD1gN3W2UX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/utils/Authenticator.sol:Authenticator",
								"label": "_healthRecord",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"AuthenticatorHelper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_authenticator",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/Authenticator.sol\":1775:2205  contract AuthenticatorHelper {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/utils/Authenticator.sol\":1846:2016  constructor(address _authenticator) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/utils/Authenticator.sol\":1926:1927  0 */\n  0x00\n    /* \"contracts/utils/Authenticator.sol\":1900:1928  _authenticator != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/utils/Authenticator.sol\":1900:1914  _authenticator */\n  dup2\n    /* \"contracts/utils/Authenticator.sol\":1900:1928  _authenticator != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/utils/Authenticator.sol\":1892:1960  require(_authenticator != address(0), \"Address zero is not allowed\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"contracts/utils/Authenticator.sol\":1994:2008  _authenticator */\n  dup1\n    /* \"contracts/utils/Authenticator.sol\":1970:1976  _IAuth */\n  0x00\n  dup1\n    /* \"contracts/utils/Authenticator.sol\":1970:2009  _IAuth = IAuthenticator(_authenticator) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/utils/Authenticator.sol\":1846:2016  constructor(address _authenticator) {... */\n  pop\n    /* \"contracts/utils/Authenticator.sol\":1775:2205  contract AuthenticatorHelper {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:150   */\ntag_11:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_13\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_14\n  jump\t// in\ntag_13:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_16\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_17\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":243:362   */\ntag_16:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_19\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_11\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":513:879   */\ntag_20:\n    /* \"#utility.yul\":655:658   */\n  0x00\n    /* \"#utility.yul\":676:743   */\n  tag_22\n    /* \"#utility.yul\":740:742   */\n  0x1b\n    /* \"#utility.yul\":735:738   */\n  dup4\n    /* \"#utility.yul\":676:743   */\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":669:743   */\n  swap2\n  pop\n    /* \"#utility.yul\":752:845   */\n  tag_24\n    /* \"#utility.yul\":841:844   */\n  dup3\n    /* \"#utility.yul\":752:845   */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":870:872   */\n  0x20\n    /* \"#utility.yul\":865:868   */\n  dup3\n    /* \"#utility.yul\":861:873   */\n  add\n    /* \"#utility.yul\":854:873   */\n  swap1\n  pop\n    /* \"#utility.yul\":513:879   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":885:1304   */\ntag_8:\n    /* \"#utility.yul\":1051:1055   */\n  0x00\n    /* \"#utility.yul\":1089:1091   */\n  0x20\n    /* \"#utility.yul\":1078:1087   */\n  dup3\n    /* \"#utility.yul\":1074:1092   */\n  add\n    /* \"#utility.yul\":1066:1092   */\n  swap1\n  pop\n    /* \"#utility.yul\":1138:1147   */\n  dup2\n    /* \"#utility.yul\":1132:1136   */\n  dup2\n    /* \"#utility.yul\":1128:1148   */\n  sub\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1113:1122   */\n  dup4\n    /* \"#utility.yul\":1109:1126   */\n  add\n    /* \"#utility.yul\":1102:1149   */\n  mstore\n    /* \"#utility.yul\":1166:1297   */\n  tag_27\n    /* \"#utility.yul\":1292:1296   */\n  dup2\n    /* \"#utility.yul\":1166:1297   */\n  tag_20\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":1158:1297   */\n  swap1\n  pop\n    /* \"#utility.yul\":885:1304   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1391:1560   */\ntag_23:\n    /* \"#utility.yul\":1475:1486   */\n  0x00\n    /* \"#utility.yul\":1509:1515   */\n  dup3\n    /* \"#utility.yul\":1504:1507   */\n  dup3\n    /* \"#utility.yul\":1497:1516   */\n  mstore\n    /* \"#utility.yul\":1549:1553   */\n  0x20\n    /* \"#utility.yul\":1544:1547   */\n  dup3\n    /* \"#utility.yul\":1540:1554   */\n  add\n    /* \"#utility.yul\":1525:1554   */\n  swap1\n  pop\n    /* \"#utility.yul\":1391:1560   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1566:1662   */\ntag_31:\n    /* \"#utility.yul\":1603:1610   */\n  0x00\n    /* \"#utility.yul\":1632:1656   */\n  tag_33\n    /* \"#utility.yul\":1650:1655   */\n  dup3\n    /* \"#utility.yul\":1632:1656   */\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1621:1656   */\n  swap1\n  pop\n    /* \"#utility.yul\":1566:1662   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1668:1794   */\ntag_34:\n    /* \"#utility.yul\":1705:1712   */\n  0x00\n    /* \"#utility.yul\":1745:1787   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1738:1743   */\n  dup3\n    /* \"#utility.yul\":1734:1788   */\n  and\n    /* \"#utility.yul\":1723:1788   */\n  swap1\n  pop\n    /* \"#utility.yul\":1668:1794   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1923:2040   */\ntag_18:\n    /* \"#utility.yul\":2032:2033   */\n  0x00\n    /* \"#utility.yul\":2029:2030   */\n  dup1\n    /* \"#utility.yul\":2022:2034   */\n  revert\n    /* \"#utility.yul\":2046:2223   */\ntag_25:\n    /* \"#utility.yul\":2186:2215   */\n  0x41646472657373207a65726f206973206e6f7420616c6c6f7765640000000000\n    /* \"#utility.yul\":2182:2183   */\n  0x00\n    /* \"#utility.yul\":2174:2180   */\n  dup3\n    /* \"#utility.yul\":2170:2184   */\n  add\n    /* \"#utility.yul\":2163:2216   */\n  mstore\n    /* \"#utility.yul\":2046:2223   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2229:2351   */\ntag_14:\n    /* \"#utility.yul\":2302:2326   */\n  tag_41\n    /* \"#utility.yul\":2320:2325   */\n  dup2\n    /* \"#utility.yul\":2302:2326   */\n  tag_31\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":2295:2300   */\n  dup2\n    /* \"#utility.yul\":2292:2327   */\n  eq\n    /* \"#utility.yul\":2282:2345   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":2341:2342   */\n  0x00\n    /* \"#utility.yul\":2338:2339   */\n  dup1\n    /* \"#utility.yul\":2331:2343   */\n  revert\n    /* \"#utility.yul\":2282:2345   */\ntag_42:\n    /* \"#utility.yul\":2229:2351   */\n  pop\n  jump\t// out\n    /* \"contracts/utils/Authenticator.sol\":1775:2205  contract AuthenticatorHelper {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/Authenticator.sol\":1775:2205  contract AuthenticatorHelper {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b8b07b5beda7fb3dcedfb4e31b8adee1b68466073d56a71631fd31eb387daddc64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_73": {
									"entryPoint": null,
									"id": 73,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_99c29d3ae18d85d5821794ddd9c0f3db0f7309f2c512f09f58f37e79717a382e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_99c29d3ae18d85d5821794ddd9c0f3db0f7309f2c512f09f58f37e79717a382e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 432,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_99c29d3ae18d85d5821794ddd9c0f3db0f7309f2c512f09f58f37e79717a382e": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2354:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:3",
														"type": ""
													}
												],
												"src": "7:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:3"
															},
															"nodeType": "YulIf",
															"src": "243:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:3",
														"type": ""
													}
												],
												"src": "156:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "659:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "669:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "735:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "740:2:3",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "676:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "669:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "841:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_99c29d3ae18d85d5821794ddd9c0f3db0f7309f2c512f09f58f37e79717a382e",
																	"nodeType": "YulIdentifier",
																	"src": "752:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "752:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "752:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "854:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "865:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "870:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "861:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "854:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_99c29d3ae18d85d5821794ddd9c0f3db0f7309f2c512f09f58f37e79717a382e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "647:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "655:3:3",
														"type": ""
													}
												],
												"src": "513:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1056:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1066:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1078:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1089:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1074:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1066:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1113:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1124:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1109:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1109:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1132:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1128:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1128:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1102:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1102:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1158:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1292:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_99c29d3ae18d85d5821794ddd9c0f3db0f7309f2c512f09f58f37e79717a382e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1166:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_99c29d3ae18d85d5821794ddd9c0f3db0f7309f2c512f09f58f37e79717a382e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1036:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1051:4:3",
														"type": ""
													}
												],
												"src": "885:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1350:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1360:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1376:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1370:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1370:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1360:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1343:6:3",
														"type": ""
													}
												],
												"src": "1310:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1487:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1509:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1497:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1497:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1525:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1544:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1549:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1540:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1540:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1525:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1459:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1464:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1475:11:3",
														"type": ""
													}
												],
												"src": "1391:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1611:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1621:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1650:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1632:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1632:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1621:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1593:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1603:7:3",
														"type": ""
													}
												],
												"src": "1566:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1713:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1723:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1738:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1745:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1734:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1734:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1723:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1695:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1705:7:3",
														"type": ""
													}
												],
												"src": "1668:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1889:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1906:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1909:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1899:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1899:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1899:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1800:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2012:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2029:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2032:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2022:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2022:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2022:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1923:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2152:71:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2174:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2182:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2170:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2170:14:3"
																	},
																	{
																		"hexValue": "41646472657373207a65726f206973206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2186:29:3",
																		"type": "",
																		"value": "Address zero is not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2163:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:53:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2163:53:3"
														}
													]
												},
												"name": "store_literal_in_memory_99c29d3ae18d85d5821794ddd9c0f3db0f7309f2c512f09f58f37e79717a382e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2144:6:3",
														"type": ""
													}
												],
												"src": "2046:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2272:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2329:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2338:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2341:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2331:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2331:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2331:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2295:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2320:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2302:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2302:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2292:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2292:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2285:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2285:43:3"
															},
															"nodeType": "YulIf",
															"src": "2282:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2265:5:3",
														"type": ""
													}
												],
												"src": "2229:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_99c29d3ae18d85d5821794ddd9c0f3db0f7309f2c512f09f58f37e79717a382e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_99c29d3ae18d85d5821794ddd9c0f3db0f7309f2c512f09f58f37e79717a382e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_99c29d3ae18d85d5821794ddd9c0f3db0f7309f2c512f09f58f37e79717a382e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_99c29d3ae18d85d5821794ddd9c0f3db0f7309f2c512f09f58f37e79717a382e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_99c29d3ae18d85d5821794ddd9c0f3db0f7309f2c512f09f58f37e79717a382e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address zero is not allowed\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610242380380610242833981810160405281019061003291906100fd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100999061014d565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101f5565b6000815190506100f7816101de565b92915050565b600060208284031215610113576101126101b0565b5b6000610121848285016100e8565b91505092915050565b6000610137601b8361016d565b9150610142826101b5565b602082019050919050565b600060208201905081810360008301526101668161012a565b9050919050565b600082825260208201905092915050565b600061018982610190565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f41646472657373207a65726f206973206e6f7420616c6c6f7765640000000000600082015250565b6101e78161017e565b81146101f257600080fd5b50565b603f806102036000396000f3fe6080604052600080fdfea2646970667358221220b8b07b5beda7fb3dcedfb4e31b8adee1b68466073d56a71631fd31eb387daddc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x242 CODESIZE SUB DUP1 PUSH2 0x242 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xFD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP1 PUSH2 0x14D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF7 DUP2 PUSH2 0x1DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x113 JUMPI PUSH2 0x112 PUSH2 0x1B0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x121 DUP5 DUP3 DUP6 ADD PUSH2 0xE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x137 PUSH1 0x1B DUP4 PUSH2 0x16D JUMP JUMPDEST SWAP2 POP PUSH2 0x142 DUP3 PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x166 DUP2 PUSH2 0x12A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x189 DUP3 PUSH2 0x190 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x41646472657373207A65726F206973206E6F7420616C6C6F7765640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1E7 DUP2 PUSH2 0x17E JUMP JUMPDEST DUP2 EQ PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x3F DUP1 PUSH2 0x203 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 0xB0 PUSH28 0x5BEDA7FB3DCEDFB4E31B8ADEE1B68466073D56A71631FD31EB387DAD 0xDC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1775:430:2:-:0;;;1846:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1926:1;1900:28;;:14;:28;;;;1892:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1994:14;1970:6;;:39;;;;;;;;;;;;;;;;;;1846:170;1775:430;;7:143:3;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;513:366::-;655:3;676:67;740:2;735:3;676:67;:::i;:::-;669:74;;752:93;841:3;752:93;:::i;:::-;870:2;865:3;861:12;854:19;;513:366;;;:::o;885:419::-;1051:4;1089:2;1078:9;1074:18;1066:26;;1138:9;1132:4;1128:20;1124:1;1113:9;1109:17;1102:47;1166:131;1292:4;1166:131;:::i;:::-;1158:139;;885:419;;;:::o;1391:169::-;1475:11;1509:6;1504:3;1497:19;1549:4;1544:3;1540:14;1525:29;;1391:169;;;;:::o;1566:96::-;1603:7;1632:24;1650:5;1632:24;:::i;:::-;1621:35;;1566:96;;;:::o;1668:126::-;1705:7;1745:42;1738:5;1734:54;1723:65;;1668:126;;;:::o;1923:117::-;2032:1;2029;2022:12;2046:177;2186:29;2182:1;2174:6;2170:14;2163:53;2046:177;:::o;2229:122::-;2302:24;2320:5;2302:24;:::i;:::-;2295:5;2292:35;2282:63;;2341:1;2338;2331:12;2282:63;2229:122;:::o;1775:430:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220b8b07b5beda7fb3dcedfb4e31b8adee1b68466073d56a71631fd31eb387daddc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 0xB0 PUSH28 0x5BEDA7FB3DCEDFB4E31B8ADEE1B68466073D56A71631FD31EB387DAD 0xDC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1775:430:2:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1775,
									"end": 2205,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1775,
									"end": 2205,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1775,
									"end": 2205,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1926,
									"end": 1927,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1900,
									"end": 1928,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1900,
									"end": 1928,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1900,
									"end": 1914,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1900,
									"end": 1928,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1900,
									"end": 1928,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1900,
									"end": 1928,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1900,
									"end": 1928,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "PUSH",
									"source": 2,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1892,
									"end": 1960,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1994,
									"end": 2008,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1976,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1970,
									"end": 1976,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1970,
									"end": 2009,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 2009,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1970,
									"end": 2009,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 2009,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 2009,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 2009,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 2009,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1970,
									"end": 2009,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 2009,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 2009,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 2009,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 2009,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1846,
									"end": 2016,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1775,
									"end": 2205,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1775,
									"end": 2205,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 513,
									"end": 879,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 513,
									"end": 879,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 655,
									"end": 658,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 676,
									"end": 743,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 740,
									"end": 742,
									"name": "PUSH",
									"source": 3,
									"value": "1B"
								},
								{
									"begin": 735,
									"end": 738,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 676,
									"end": 743,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 676,
									"end": 743,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 676,
									"end": 743,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 676,
									"end": 743,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 669,
									"end": 743,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 669,
									"end": 743,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 752,
									"end": 845,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 841,
									"end": 844,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 752,
									"end": 845,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 752,
									"end": 845,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 752,
									"end": 845,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 752,
									"end": 845,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 870,
									"end": 872,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 865,
									"end": 868,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 861,
									"end": 873,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 854,
									"end": 873,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 854,
									"end": 873,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 513,
									"end": 879,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 513,
									"end": 879,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 513,
									"end": 879,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 513,
									"end": 879,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 885,
									"end": 1304,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 885,
									"end": 1304,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1051,
									"end": 1055,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1089,
									"end": 1091,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1078,
									"end": 1087,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1074,
									"end": 1092,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1066,
									"end": 1092,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1066,
									"end": 1092,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1138,
									"end": 1147,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1136,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1128,
									"end": 1148,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1113,
									"end": 1122,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1109,
									"end": 1126,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1102,
									"end": 1149,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1166,
									"end": 1297,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 1292,
									"end": 1296,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1166,
									"end": 1297,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1166,
									"end": 1297,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1166,
									"end": 1297,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 1166,
									"end": 1297,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1158,
									"end": 1297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1158,
									"end": 1297,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 885,
									"end": 1304,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 885,
									"end": 1304,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 885,
									"end": 1304,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 885,
									"end": 1304,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1391,
									"end": 1560,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1391,
									"end": 1560,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1475,
									"end": 1486,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1515,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1504,
									"end": 1507,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1497,
									"end": 1516,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1549,
									"end": 1553,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1544,
									"end": 1547,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1540,
									"end": 1554,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1525,
									"end": 1554,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1525,
									"end": 1554,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1391,
									"end": 1560,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1391,
									"end": 1560,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1391,
									"end": 1560,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1391,
									"end": 1560,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1391,
									"end": 1560,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1566,
									"end": 1662,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1566,
									"end": 1662,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1603,
									"end": 1610,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1632,
									"end": 1656,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 1650,
									"end": 1655,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1632,
									"end": 1656,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 1632,
									"end": 1656,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1632,
									"end": 1656,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 1632,
									"end": 1656,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1621,
									"end": 1656,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1621,
									"end": 1656,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1662,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1662,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1662,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1662,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1668,
									"end": 1794,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 1668,
									"end": 1794,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1705,
									"end": 1712,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1745,
									"end": 1787,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1738,
									"end": 1743,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1734,
									"end": 1788,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1723,
									"end": 1788,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1723,
									"end": 1788,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1668,
									"end": 1794,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1668,
									"end": 1794,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1668,
									"end": 1794,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1668,
									"end": 1794,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1923,
									"end": 2040,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1923,
									"end": 2040,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2033,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2029,
									"end": 2030,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2022,
									"end": 2034,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2046,
									"end": 2223,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 2046,
									"end": 2223,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2186,
									"end": 2215,
									"name": "PUSH",
									"source": 3,
									"value": "41646472657373207A65726F206973206E6F7420616C6C6F7765640000000000"
								},
								{
									"begin": 2182,
									"end": 2183,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2174,
									"end": 2180,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2170,
									"end": 2184,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2163,
									"end": 2216,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2046,
									"end": 2223,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2046,
									"end": 2223,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2229,
									"end": 2351,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 2229,
									"end": 2351,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2302,
									"end": 2326,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 2320,
									"end": 2325,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2302,
									"end": 2326,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 2302,
									"end": 2326,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2302,
									"end": 2326,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 2302,
									"end": 2326,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2295,
									"end": 2300,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2292,
									"end": 2327,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 2282,
									"end": 2345,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 2282,
									"end": 2345,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2341,
									"end": 2342,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2338,
									"end": 2339,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2331,
									"end": 2343,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2282,
									"end": 2345,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 2282,
									"end": 2345,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2229,
									"end": 2351,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2229,
									"end": 2351,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1775,
									"end": 2205,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1775,
									"end": 2205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1775,
									"end": 2205,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1775,
									"end": 2205,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1775,
									"end": 2205,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1775,
									"end": 2205,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1775,
									"end": 2205,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1775,
									"end": 2205,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1775,
									"end": 2205,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b8b07b5beda7fb3dcedfb4e31b8adee1b68466073d56a71631fd31eb387daddc64736f6c63430008070033",
									".code": [
										{
											"begin": 1775,
											"end": 2205,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1775,
											"end": 2205,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 2205,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 2205,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 2205,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 2205,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authenticator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Authenticator.sol\":\"AuthenticatorHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/enum/AuthType.sol\":{\"keccak256\":\"0x1d306485d04b46f6211ff1ae31c74288dac1575221fb826d423da7832617ac1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cf0839f69f3d716a841f1a9c0b3f3813b407e865bb712b881e1e1859809c214\",\"dweb:/ipfs/QmZxWZgrczu3ukQdcLyfiWUTVpD5oAZDJfPYi2a2Xz7yff\"]},\"contracts/interface/IAuthenticator.sol\":{\"keccak256\":\"0x093fc2acf8a48c553caac683bce0ed5ac7b82998a52311187fdef00d49add4b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542f1b1b4894bb4e021e526174c493f6ed4c15e4d3e99a5a4b104ddf5a5fb455\",\"dweb:/ipfs/QmVrA6Jhd7JqcPkv44jaGFnv9PpLBJoWceBezR8guZuxMv\"]},\"contracts/utils/Authenticator.sol\":{\"keccak256\":\"0xcd5cd801b5642d949547603894f69dec80d22ccd0949e0658c67d3f483cd6799\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://093ebdd548b146f526133a02c2fddc8b23e3e856fbde628dd8ee844131cf2187\",\"dweb:/ipfs/QmX5YSibtwqsh63Ey6YHue3TYZyKqgQ9382MHD1gN3W2UX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 51,
								"contract": "contracts/utils/Authenticator.sol:AuthenticatorHelper",
								"label": "_IAuth",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IAuthenticator)17"
							}
						],
						"types": {
							"t_contract(IAuthenticator)17": {
								"encoding": "inplace",
								"label": "contract IAuthenticator",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/enum/AuthType.sol": {
				"ast": {
					"absolutePath": "contracts/enum/AuthType.sol",
					"exportedSymbols": {
						"AuthType": [
							5
						]
					},
					"id": 6,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"canonicalName": "AuthType",
							"id": 5,
							"members": [
								{
									"id": 2,
									"name": "NONE",
									"nameLocation": "81:4:0",
									"nodeType": "EnumValue",
									"src": "81:4:0"
								},
								{
									"id": 3,
									"name": "CL",
									"nameLocation": "92:2:0",
									"nodeType": "EnumValue",
									"src": "92:2:0"
								},
								{
									"id": 4,
									"name": "HR",
									"nameLocation": "101:2:0",
									"nodeType": "EnumValue",
									"src": "101:2:0"
								}
							],
							"name": "AuthType",
							"nameLocation": "65:8:0",
							"nodeType": "EnumDefinition",
							"src": "60:46:0"
						}
					],
					"src": "33:75:0"
				},
				"id": 0
			},
			"contracts/interface/IAuthenticator.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IAuthenticator.sol",
					"exportedSymbols": {
						"AuthType": [
							5
						],
						"IAuthenticator": [
							17
						]
					},
					"id": 18,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 7,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "contracts/enum/AuthType.sol",
							"file": "../enum/AuthType.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 18,
							"sourceUnit": 6,
							"src": "56:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 17,
							"linearizedBaseContracts": [
								17
							],
							"name": "IAuthenticator",
							"nameLocation": "98:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "4b165090",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkAuth",
									"nameLocation": "128:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "146:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "138:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "138:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "137:18:1"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "179:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_AuthType_$5",
													"typeString": "enum AuthType"
												},
												"typeName": {
													"id": 13,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 12,
														"name": "AuthType",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "179:8:1"
													},
													"referencedDeclaration": 5,
													"src": "179:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_AuthType_$5",
														"typeString": "enum AuthType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "178:10:1"
									},
									"scope": 17,
									"src": "119:70:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 18,
							"src": "88:103:1",
							"usedErrors": []
						}
					],
					"src": "32:160:1"
				},
				"id": 1
			},
			"contracts/utils/Authenticator.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Authenticator.sol",
					"exportedSymbols": {
						"AuthType": [
							5
						],
						"Authenticator": [
							48
						],
						"AuthenticatorHelper": [
							90
						],
						"IAuthenticator": [
							17
						]
					},
					"id": 91,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 19,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "contracts/interface/IAuthenticator.sol",
							"file": "../interface/IAuthenticator.sol",
							"id": 20,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 91,
							"sourceUnit": 18,
							"src": "56:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 21,
										"name": "IAuthenticator",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 17,
										"src": "125:14:2"
									},
									"id": 22,
									"nodeType": "InheritanceSpecifier",
									"src": "125:14:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 48,
							"linearizedBaseContracts": [
								48,
								17
							],
							"name": "Authenticator",
							"nameLocation": "108:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_healthRecord",
									"nameLocation": "333:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "300:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "308:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "300:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 24,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "319:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "367:95:2",
										"statements": [
											{
												"expression": {
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 29,
															"name": "_healthRecord",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "423:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 32,
														"indexExpression": {
															"expression": {
																"id": 30,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "437:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "437:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "423:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "451:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "423:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "423:32:2"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "364:2:2"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "367:0:2"
									},
									"scope": 48,
									"src": "353:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										16
									],
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "1412:358:2",
										"statements": []
									},
									"functionSelector": "4b165090",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkAuth",
									"nameLocation": "1306:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 41,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1372:8:2"
									},
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1324:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1316:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1316:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1315:18:2"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1398:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_AuthType_$5",
													"typeString": "enum AuthType"
												},
												"typeName": {
													"id": 43,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 42,
														"name": "AuthType",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1398:8:2"
													},
													"referencedDeclaration": 5,
													"src": "1398:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_AuthType_$5",
														"typeString": "enum AuthType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1397:10:2"
									},
									"scope": 48,
									"src": "1297:473:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 91,
							"src": "99:1674:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 90,
							"linearizedBaseContracts": [
								90
							],
							"name": "AuthenticatorHelper",
							"nameLocation": "1784:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 51,
									"mutability": "mutable",
									"name": "_IAuth",
									"nameLocation": "1833:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 90,
									"src": "1810:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAuthenticator_$17",
										"typeString": "contract IAuthenticator"
									},
									"typeName": {
										"id": 50,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 49,
											"name": "IAuthenticator",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 17,
											"src": "1810:14:2"
										},
										"referencedDeclaration": 17,
										"src": "1810:14:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAuthenticator_$17",
											"typeString": "contract IAuthenticator"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "1882:134:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 57,
																"name": "_authenticator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "1900:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 60,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1926:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1918:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 58,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1918:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1918:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1900:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646472657373207a65726f206973206e6f7420616c6c6f776564",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1930:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_99c29d3ae18d85d5821794ddd9c0f3db0f7309f2c512f09f58f37e79717a382e",
																"typeString": "literal_string \"Address zero is not allowed\""
															},
															"value": "Address zero is not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_99c29d3ae18d85d5821794ddd9c0f3db0f7309f2c512f09f58f37e79717a382e",
																"typeString": "literal_string \"Address zero is not allowed\""
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1892:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "1892:68:2"
											},
											{
												"expression": {
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 66,
														"name": "_IAuth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "1970:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAuthenticator_$17",
															"typeString": "contract IAuthenticator"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 68,
																"name": "_authenticator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "1994:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 67,
															"name": "IAuthenticator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1979:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IAuthenticator_$17_$",
																"typeString": "type(contract IAuthenticator)"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1979:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAuthenticator_$17",
															"typeString": "contract IAuthenticator"
														}
													},
													"src": "1970:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAuthenticator_$17",
														"typeString": "contract IAuthenticator"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "1970:39:2"
											}
										]
									},
									"id": 73,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "_authenticator",
												"nameLocation": "1866:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1858:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1857:24:2"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1882:0:2"
									},
									"scope": 90,
									"src": "1846:170:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2044:158:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_AuthType_$5",
																"typeString": "enum AuthType"
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 78,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2092:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 79,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2092:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 76,
																		"name": "_IAuth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 51,
																		"src": "2075:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IAuthenticator_$17",
																			"typeString": "contract IAuthenticator"
																		}
																	},
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "checkAuth",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 16,
																	"src": "2075:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_enum$_AuthType_$5_$",
																		"typeString": "function (address) view external returns (enum AuthType)"
																	}
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2075:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_AuthType_$5",
																	"typeString": "enum AuthType"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 81,
																	"name": "AuthType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "2107:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_AuthType_$5_$",
																		"typeString": "type(enum AuthType)"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "CL",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "2107:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_AuthType_$5",
																	"typeString": "enum AuthType"
																}
															},
															"src": "2075:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206163746f725f636c696e69632063616e2063616c6c20746869732066756e6374696f6e",
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2132:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6dc7b8ea98c8b47c0c147f914e30198132e6db91e06485a980a7e92607863686",
																"typeString": "literal_string \"Only actor_clinic can call this function\""
															},
															"value": "Only actor_clinic can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6dc7b8ea98c8b47c0c147f914e30198132e6db91e06485a980a7e92607863686",
																"typeString": "literal_string \"Only actor_clinic can call this function\""
															}
														],
														"id": 75,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2054:130:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2054:130:2"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2194:1:2"
											}
										]
									},
									"id": 89,
									"name": "onlyClinic",
									"nameLocation": "2031:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2041:2:2"
									},
									"src": "2022:180:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 91,
							"src": "1775:430:2",
							"usedErrors": []
						}
					],
					"src": "32:2174:2"
				},
				"id": 2
			}
		}
	}
}