/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AuthenticatorHelper,
  AuthenticatorHelperInterface,
} from "../../../../contracts/utils/Authenticator.sol/AuthenticatorHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authenticator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516102423803806102428339818101604052810190610032919061014b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610099906101d5565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101f5565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610118826100ed565b9050919050565b6101288161010d565b811461013357600080fd5b50565b6000815190506101458161011f565b92915050565b600060208284031215610161576101606100e8565b5b600061016f84828501610136565b91505092915050565b600082825260208201905092915050565b7f41646472657373207a65726f206973206e6f7420616c6c6f7765640000000000600082015250565b60006101bf601b83610178565b91506101ca82610189565b602082019050919050565b600060208201905081810360008301526101ee816101b2565b9050919050565b603f806102036000396000f3fe6080604052600080fdfea2646970667358221220aab6c0bdb61bb2151be04dcc335d681c4c5d08e1e48aa80dce3cb455c703920664736f6c63430008090033";

type AuthenticatorHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuthenticatorHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AuthenticatorHelper__factory extends ContractFactory {
  constructor(...args: AuthenticatorHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _authenticator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AuthenticatorHelper> {
    return super.deploy(
      _authenticator,
      overrides || {}
    ) as Promise<AuthenticatorHelper>;
  }
  override getDeployTransaction(
    _authenticator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_authenticator, overrides || {});
  }
  override attach(address: string): AuthenticatorHelper {
    return super.attach(address) as AuthenticatorHelper;
  }
  override connect(signer: Signer): AuthenticatorHelper__factory {
    return super.connect(signer) as AuthenticatorHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuthenticatorHelperInterface {
    return new utils.Interface(_abi) as AuthenticatorHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AuthenticatorHelper {
    return new Contract(address, _abi, signerOrProvider) as AuthenticatorHelper;
  }
}
